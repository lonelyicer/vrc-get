[build]
beforeBuildCommand = "npm run build"
beforeDevCommand = "npm run dev"
devPath = "http://localhost:3000"
distDir = "out"

[package]
productName = "ALCOM"

[tauri]

[tauri.allowlist]
shell = { open = "^((https|unityhub)?://\\w+).+" }
os.all = true

[tauri.security]
# csp =

[tauri.updater]
active = true
endpoints = ["https://vrc-get.anatawa12.com/api/gui/tauri-updater.json"]
dialog = true
pubkey = "dW50cnVzdGVkIGNvbW1lbnQ6IG1pbmlzaWduIHB1YmxpYyBrZXk6IDkyMjAzMkU2Q0ZGQjQ0MjYKUldRbVJQdlA1aklna2d2NnRoM3ZsT3lzWEQ3MC9zTGpaWVR4NGdQOXR0UGJaOHBlY2xCcFY5bHcK"

[tauri.bundle]
active = true
targets = [
    "appimage",
    "nsis", #-setup.exe
    "app", # needs for dmg
    "dmg",

    "updater", # auto update
]
longDescription = "ALCOM is a fast and open-source alternative VCC (VRChat Creator Companion) written in rust and tauri."
shortDescription = "ALCOM - Alternative Creator Companion"
identifier = "com.anataw12.vrc-get"
category = "DeveloperTool"
copyright = "(c) anatawa12 and other contributors"

externalBin = []
icon = [
    "icons/32x32.png",
    "icons/128x128.png",
    "icons/128x128@2x.png",
    "icons/icon.icns",
    "icons/icon.ico",
]
resources = []

[tauri.bundle.deb]
depends = []

[tauri.bundle.macOS]
exceptionDomain = ""
frameworks = []
providerShortName = "anatawa12"

[tauri.bundle.windows]
digestAlgorithm = "sha256"

[tauri.bundle.windows.nsis]
installMode = 'both'
